@model JL.Web.Areas.backend.Models.ProductModel
@{
    ViewBag.Title = "新品上架";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-lg-12">
            <h3 class="page-header">新宝贝上架</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-10">
            <div class="panel panel-default">

                <div class="panel-heading">
                    <div class="form-group">
                        <label for="Name">宝贝名称</label>
                        @Html.TextBoxFor(a => a.Name, new { @class = "form-control", placeholder = "请输入产品名称" })
                    </div>
                    <div class="form-group">
                        <label for="Alias">宝贝别名</label>
                        @Html.TextBoxFor(a => a.Alias, new { @class = "form-control", placeholder = "请输入产品别名" })
                    </div>
                    
                </div>
                <div class="panel-body">
                    @Html.TextAreaFor(m => m.Description, new { Style = "Height:500px;" })
                </div>

            </div>
            <button type="submit" class="btn btn-success">发布</button>
        </div>
        <div class="col-lg-2">
            <div class="panel-body">
                <div class="form-group">
                    <label for="categories">类型</label>
                    @Html.DropDownList("categories", null, "- 请选择 -", new { @class = "form-control" })                    
                </div>

                <div class="form-group">
                    <label for="MarketPrice">市场价</label>
                    @Html.TextBoxFor(m=>m.MarketPrice, new { @class = "form-control", placeholder = "请输入宝贝市场价" })
                </div>
                <div class="form-group">
                    <label for="MarketPrice">零售价</label>
                    @Html.TextBoxFor(m => m.MarketPrice, new { @class = "form-control", placeholder = "请输入宝贝零售价" })
                </div>

                <div class="form-group">
                    <label for="datetimepicker">发布日期</label>
                    <input type="text" name="pubtime" class="form-control" value="@DateTime.Now.Date.ToString("yyyy-MM-dd")" id="datetimepicker" data-date-format="yyyy-mm-dd">
                </div>

                <div class="form-group">
                    <label for="Sort">排序</label>
                    @Html.TextBoxFor(m=>m.SortIndex, new { @class = "form-control", placeholder = "请输入序号" })
                </div>

                <div class="form-group">
                    <label for="datetimepicker">图片</label>
                    <input id="file-image" name="file-image" type="file" class="file-loading" accept="image/*">
                </div>
            </div>
        </div>
    </div>
}


@section styles{
    @Styles.Render("~/Content/datepicker")
    @Styles.Render("~/Content/fileinput")
}
@section scripts{
    @Scripts.Render("~/bundles/ueditor/")
    @Scripts.Render("~/bundles/datepicker/")
    @Scripts.Render("~/bundles/fileinput")

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var ue = UE.getEditor('Description');

        $('#datetimepicker').datepicker({
            language: 'zh-CN',
            autoclose: true,
            todayBtn: true,
            pickerPosition: "bottom-left",
            todayHighlight:true
        });

        $('#file-image').fileinput({
            language: 'zh', //设置语言
            allowedFileExtensions: ['jpg', 'png', 'gif'],

            showUpload: false,
            showCaption: false,
            browseClass: "btn btn-primary",
            previewFileIcon: "<i class='glyphicon glyphicon-king'></i>"
        });

        // jquery validate
        $(document).ready(function () {
            $('form').validate({
                rules: {
                    Name: "required"
                },
                messages: {
                    Name: "请输入宝贝名称"
                },
                errorElement: "em",
                errorPlacement: function (error, element) {
                    // Add the `help-block` class to the error element
                    error.addClass("help-block");
                    if (element.prop("type") === "checkbox") {
                        error.insertAfter(element.parent("label"));
                    } else {
                        error.insertAfter(element);
                    }
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).parents(".form-group").addClass("has-error").removeClass("has-success");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).parents(".form-group").addClass("has-success").removeClass("has-error");
                }

            });
        });
    </script>
}
